/*
 * This file is generated by jOOQ.
 */
package io.hikari.jooq.domain.tables.records;


import io.hikari.jooq.domain.tables.OauthCode;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OauthCodeRecord extends TableRecordImpl<OauthCodeRecord> implements Record2<String, byte[]> {

    private static final long serialVersionUID = 1542593977;

    /**
     * Setter for <code>hikari.oauth_code.code</code>. 存储服务端系统生成的code的值(未加密).
     */
    public void setCode(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>hikari.oauth_code.code</code>. 存储服务端系统生成的code的值(未加密).
     */
    public String getCode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>hikari.oauth_code.authentication</code>. 存储将AuthorizationRequestHolder.java对象序列化后的二进制数据.
     */
    public void setAuthentication(byte[] value) {
        set(1, value);
    }

    /**
     * Getter for <code>hikari.oauth_code.authentication</code>. 存储将AuthorizationRequestHolder.java对象序列化后的二进制数据.
     */
    public byte[] getAuthentication() {
        return (byte[]) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, byte[]> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, byte[]> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return OauthCode.OAUTH_CODE.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field2() {
        return OauthCode.OAUTH_CODE.AUTHENTICATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component2() {
        return getAuthentication();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value2() {
        return getAuthentication();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OauthCodeRecord value1(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OauthCodeRecord value2(byte[] value) {
        setAuthentication(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OauthCodeRecord values(String value1, byte[] value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OauthCodeRecord
     */
    public OauthCodeRecord() {
        super(OauthCode.OAUTH_CODE);
    }

    /**
     * Create a detached, initialised OauthCodeRecord
     */
    public OauthCodeRecord(String code, byte[] authentication) {
        super(OauthCode.OAUTH_CODE);

        set(0, code);
        set(1, authentication);
    }
}
