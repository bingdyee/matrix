/*
 * This file is generated by jOOQ.
 */
package io.hikari.jooq.domain;


import io.hikari.jooq.domain.tables.OauthAccessToken;
import io.hikari.jooq.domain.tables.OauthClientDetails;
import io.hikari.jooq.domain.tables.OauthClientToken;
import io.hikari.jooq.domain.tables.SysRole;
import io.hikari.jooq.domain.tables.SysUser;
import io.hikari.jooq.domain.tables.SysUserRole;
import io.hikari.jooq.domain.tables.records.OauthAccessTokenRecord;
import io.hikari.jooq.domain.tables.records.OauthClientDetailsRecord;
import io.hikari.jooq.domain.tables.records.OauthClientTokenRecord;
import io.hikari.jooq.domain.tables.records.SysRoleRecord;
import io.hikari.jooq.domain.tables.records.SysUserRecord;
import io.hikari.jooq.domain.tables.records.SysUserRoleRecord;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>hikari</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<SysUserRoleRecord, Long> IDENTITY_SYS_USER_ROLE = Identities0.IDENTITY_SYS_USER_ROLE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<OauthAccessTokenRecord> KEY_OAUTH_ACCESS_TOKEN_PRIMARY = UniqueKeys0.KEY_OAUTH_ACCESS_TOKEN_PRIMARY;
    public static final UniqueKey<OauthClientDetailsRecord> KEY_OAUTH_CLIENT_DETAILS_PRIMARY = UniqueKeys0.KEY_OAUTH_CLIENT_DETAILS_PRIMARY;
    public static final UniqueKey<OauthClientTokenRecord> KEY_OAUTH_CLIENT_TOKEN_PRIMARY = UniqueKeys0.KEY_OAUTH_CLIENT_TOKEN_PRIMARY;
    public static final UniqueKey<SysRoleRecord> KEY_SYS_ROLE_PRIMARY = UniqueKeys0.KEY_SYS_ROLE_PRIMARY;
    public static final UniqueKey<SysUserRecord> KEY_SYS_USER_PRIMARY = UniqueKeys0.KEY_SYS_USER_PRIMARY;
    public static final UniqueKey<SysUserRoleRecord> KEY_SYS_USER_ROLE_PRIMARY = UniqueKeys0.KEY_SYS_USER_ROLE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<SysUserRoleRecord, Long> IDENTITY_SYS_USER_ROLE = Internal.createIdentity(SysUserRole.SYS_USER_ROLE, SysUserRole.SYS_USER_ROLE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<OauthAccessTokenRecord> KEY_OAUTH_ACCESS_TOKEN_PRIMARY = Internal.createUniqueKey(OauthAccessToken.OAUTH_ACCESS_TOKEN, "KEY_oauth_access_token_PRIMARY", OauthAccessToken.OAUTH_ACCESS_TOKEN.AUTHENTICATION_ID);
        public static final UniqueKey<OauthClientDetailsRecord> KEY_OAUTH_CLIENT_DETAILS_PRIMARY = Internal.createUniqueKey(OauthClientDetails.OAUTH_CLIENT_DETAILS, "KEY_oauth_client_details_PRIMARY", OauthClientDetails.OAUTH_CLIENT_DETAILS.CLIENT_ID);
        public static final UniqueKey<OauthClientTokenRecord> KEY_OAUTH_CLIENT_TOKEN_PRIMARY = Internal.createUniqueKey(OauthClientToken.OAUTH_CLIENT_TOKEN, "KEY_oauth_client_token_PRIMARY", OauthClientToken.OAUTH_CLIENT_TOKEN.AUTHENTICATION_ID);
        public static final UniqueKey<SysRoleRecord> KEY_SYS_ROLE_PRIMARY = Internal.createUniqueKey(SysRole.SYS_ROLE, "KEY_sys_role_PRIMARY", SysRole.SYS_ROLE.ID);
        public static final UniqueKey<SysUserRecord> KEY_SYS_USER_PRIMARY = Internal.createUniqueKey(SysUser.SYS_USER, "KEY_sys_user_PRIMARY", SysUser.SYS_USER.ID);
        public static final UniqueKey<SysUserRoleRecord> KEY_SYS_USER_ROLE_PRIMARY = Internal.createUniqueKey(SysUserRole.SYS_USER_ROLE, "KEY_sys_user_role_PRIMARY", SysUserRole.SYS_USER_ROLE.ID);
    }
}
