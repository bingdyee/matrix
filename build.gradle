plugins {
    id 'org.springframework.boot' version '2.3.6.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.10.RELEASE' apply false
}

ext {
    moduleProjects = subprojects.findAll {
        it.name.startsWith("matrix-") && !it.name.endsWith('elastic')
    }
    javaProjects = subprojects - project(":framework-bom")
}

configure(allprojects) { project ->
    group = "io.github.matrix"

    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:2.3.6.RELEASE"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR9"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:2.2.3.RELEASE"
            mavenBom "org.junit:junit-bom:5.7.0"
            mavenBom "io.netty:netty-bom:4.1.51.Final"
        }
        dependencies {
            dependency "org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4"
            dependency  "mysql:mysql-connector-java:8.0.21"
            dependency "io.netty:netty-all:4.1.51.Final"
            dependency "org.apache.curator:curator-recipes:5.1.0"
            dependency "org.redisson:redisson:3.13.4"
            dependency "redis.clients:jedis:3.3.0"
            dependency "org.apache.zookeeper:zookeeper:3.6.1"
            dependency "org.elasticsearch:elasticsearch:7.9.1"
            dependency "cglib:cglib:3.3.0"
            dependency "com.google.guava:guava:29.0-jre"
            dependency "com.alibaba:fastjson:1.2.75"
            dependency "com.google.zxing:core:3.4.1"
            dependency "com.google.zxing:javase:3.4.1"
            dependency "net.java.dev.jna:jna:5.6.0"
            dependency "org.openjdk.jol:jol-core:0.14"
            dependency "com.esotericsoftware:reflectasm:1.11.9"
            dependency "org.apache.commons:commons-lang3:3.11"
            dependency "org.apache.velocity:velocity:1.7"
            dependency "javax.validation:validation-api:2.0.1.Final"
        }
        generatedPomCustomization {
            enabled = false
        }
        resolutionStrategy {
            cacheChangingModulesFor 0, "seconds"
        }
        repositories {
            mavenLocal()
            maven { url "https://maven.aliyun.com/repository/public" }
            mavenCentral()
        }
    }

    configurations.all {
        resolutionStrategy {
            cacheChangingModulesFor 0, "seconds"
            cacheDynamicVersionsFor 0, "seconds"
        }
    }
}

configure(javaProjects) { project ->

    apply plugin: "java"

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    test {
        useJUnitPlatform()
    }

}

configure(moduleProjects) { project ->

    apply from: "$rootDir/gradle/publications.gradle"

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }
    }

}


